---
resource_types:
  - name: bosh-deployment
    type: docker-image
    source:
      repository: cloudfoundry/bosh-deployment-resource
  - name: gcs-resource
    type: docker-image
    source:
      repository: frodenas/gcs-resource
      username: ((dockerhub_username))
      password: ((dockerhub_password))
  - name: terraform
    type: registry-image
    source:
      repository: ljfranklin/terraform-resource
      username: ((dockerhub_username))
      password: ((dockerhub_password))
      tag: latest

resources:
  - name: terraform
    type: terraform
    source:
      env_name: concourse
      backend_type: gcs
      backend_config:
        bucket: bosh-concourse-deployment
        prefix: terraform
        credentials: ((gcp_credentials_json))
      vars:
        project_id: cloud-foundry-310819
        gcp_credentials_json: ((gcp_credentials_json))
  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment.git
  - name: bosh-community-ci-infra
    type: git
    source:
      uri: git@github.com:cloudfoundry/bosh-community-stemcell-ci-infra.git
      branch: main
      private_key: ((github_deploy_key_bosh-community-stemcell-ci-infra.private_key))
  - name: cf-deployment-concourse-tasks-registry-image
    type: registry-image
    source:
      repository: cloudfoundry/cf-deployment-concourse-tasks
      username: ((dockerhub_username))
      password: ((dockerhub_password))
  - name: bpm-bosh-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/bpm-release
  - name: concourse-bosh-deployment
    type: bosh-deployment
    source:
      deployment: concourse
      target: ((director_target))
      client: ((director_admin.username))
      client_secret: ((director_admin.password))
      ca_cert: ((director_ca_cert.ca))
      jumpbox_ssh_key: ((jumpbox_ssh.private_key))
      jumpbox_username: ((jumpbox_username))
      jumpbox_url: ((jumpbox_url))
  - name: concourse-upgrader-bosh-deployment
    type: bosh-deployment
    source:
      deployment: concourse-upgrader
      target: ((director_target))
      client: ((director_admin.username))
      client_secret: ((director_admin.password))
      ca_cert: ((director_ca_cert.ca))
      jumpbox_ssh_key: ((jumpbox_ssh.private_key))
      jumpbox_username: ((jumpbox_username))
      jumpbox_url: ((jumpbox_url))
  - name: concourse-bosh-release
    type: bosh-io-release
    source:
      repository: concourse/concourse-bosh-release
  - name: concourse-deployment
    type: git
    source:
      uri: https://github.com/concourse/concourse-deployment.git
  - name: credhub-bosh-release
    type: bosh-io-release
    source:
      repository: pivotal-cf/credhub-release
  - name: director-state
    type: gcs-resource
    source:
      bucket: bosh-concourse-deployment
      json_key: ((gcp_credentials_json))
      versioned_file: director/state.json
  - name: director-creds
    type: gcs-resource
    source:
      bucket: bosh-concourse-deployment
      json_key: ((gcp_credentials_json))
      versioned_file: director/creds.yml
  - name: director-creds-source
    type: gcs-resource
    source:
      bucket: bosh-concourse-deployment
      json_key: ((gcp_credentials_json))
      versioned_file: director/creds-source.sh
  - name: concourse-creds-source
    type: gcs-resource
    source:
      bucket: bosh-concourse-deployment
      json_key: ((gcp_credentials_json))
      versioned_file: concourse/creds-source.sh
  - name: gcp-cpi-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/bosh-google-cpi-release
  - name: gcp-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-google-kvm-ubuntu-jammy-go_agent
  - name: jumpbox-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/jumpbox-deployment.git
  - name: jumpbox-state
    type: gcs-resource
    source:
      bucket: bosh-concourse-deployment
      json_key: ((gcp_credentials_json))
      versioned_file: jumpbox/state.json
  - name: jumpbox-creds
    type: gcs-resource
    source:
      bucket: bosh-concourse-deployment
      json_key: ((gcp_credentials_json))
      versioned_file: jumpbox/creds.yml
  - name: paused-pipelines
    type: gcs-resource
    source:
      bucket: bosh-concourse-deployment
      json_key: ((gcp_credentials_json))
      versioned_file: concourse-deploy-paused-pipelines/pipelines.tgz
  - name: monthly
    type: time
    source:
      interval: 720h #! 30 days
      initial_version: true
  - name: time-trigger
    type: time
  - name: os-conf-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/os-conf-release
  - name: uaa-bosh-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/uaa-release

jobs:
  - name: terraform
    plan:
      - get: bosh-community-ci-infra
      - put: terraform
        params:
          terraform_source: bosh-community-ci-infra/bosh-concourse/terraform/concourse-gcp

  - name: regenerate-certs
    plan:
      - in_parallel:
          - get: monthly
            trigger: true
          - get: bosh-community-ci-infra
          - get: cf-deployment-concourse-tasks-registry-image
          - get: bosh-deployment
          - get: director-creds
          - get: director-state
          - get: jumpbox-creds
          - get: jumpbox-state
          - get: terraform
      - in_parallel:
          - task: remove-old-jumpbox-certs
            file: bosh-community-ci-infra/bosh-concourse/tasks/cert-rotation/rotate-certs.yml
            image: cf-deployment-concourse-tasks-registry-image
            input_mapping:
              creds: jumpbox-creds
            output_mapping:
              creds: jumpbox-creds
          - task: remove-old-director-certs
            file: bosh-community-ci-infra/bosh-concourse/tasks/cert-rotation/rotate-certs.yml
            image: cf-deployment-concourse-tasks-registry-image
            input_mapping:
              creds: director-creds
            output_mapping:
              creds: director-creds
            params:
              ROTATE_DIRECTOR: true
          - task: clear-director-manifest-sha
            file: bosh-community-ci-infra/bosh-concourse/tasks/cert-rotation/clear-manifest-sha.yml
            image: cf-deployment-concourse-tasks-registry-image
            input_mapping:
              state: director-state
            output_mapping:
              state: director-state
          - task: clear-jumpbox-manifest-sha
            file: bosh-community-ci-infra/bosh-concourse/tasks/cert-rotation/clear-manifest-sha.yml
            image: cf-deployment-concourse-tasks-registry-image
            input_mapping:
              state: jumpbox-state
            output_mapping:
              state: jumpbox-state
          - task: regenerate-certificates-in-credhub
            file: bosh-community-ci-infra/bosh-concourse/tasks/cert-rotation/rotate-ca-certificate.yml
            image: cf-deployment-concourse-tasks-registry-image
            params:
              CREDHUB_CA_CERT: ((director_credhub_ca_cert.ca))
              CREDHUB_CLIENT: ((director_credhub_admin.username))
              CREDHUB_SECRET: ((director_credhub_admin.password))
              CREDHUB_SERVER: ((director_credhub_server))
              JUMPBOX_URL: ((jumpbox_url))
              JUMPBOX_PRIVATE_KEY: ((jumpbox_ssh.private_key))
              CAS_TO_ROTATE: "/dns_api_tls_ca,/dns_healthcheck_tls_ca,/concourse/concourse/atc_ca"
      - in_parallel:
          - put: jumpbox-creds
            params:
              file: jumpbox-creds/creds.yml
          - put: director-creds
            params:
              file: director-creds/creds.yml
          - put: jumpbox-state
            params:
              file: jumpbox-state/state.json
          - put: director-state
            params:
              file: director-state/state.json

  - name: create-jumpbox
    plan:
      - in_parallel:
        - get: bosh-community-ci-infra
        - get: cf-deployment-concourse-tasks-registry-image
        - get: gcp-cpi-release
        - get: gcp-stemcell
        - get: jumpbox-creds
        - get: jumpbox-deployment
        - get: jumpbox-state
        - get: monthly
          trigger: true
          passed:
            - regenerate-certs
        - get: os-conf-release
        - get: terraform
          passed:
          - terraform
      - task: jumpbox-create-env
        file: bosh-community-ci-infra/bosh-concourse/tasks/deploy-jumpbox/jumpbox-create-env-gcp.yml
        image: cf-deployment-concourse-tasks-registry-image
        params:
          GCP_CREDENTIALS_JSON: ((gcp_credentials_json))
        ensure:
          do:
            - in_parallel:
              - put: jumpbox-creds
                params:
                  file: jumpbox-creds/creds.yml
              - put: jumpbox-state
                params:
                  file: jumpbox-state/state.json

  - name: create-director
    plan:
      - in_parallel:
        - get: bosh-deployment
        - get: bosh-community-ci-infra
        - get: cf-deployment-concourse-tasks-registry-image
        - get: director-creds
        - get: director-state
        - get: jumpbox-creds
          passed:
            - create-jumpbox
        - get: monthly
          trigger: true
          passed:
            - create-jumpbox
        - get: terraform
          passed:
            - create-jumpbox
      - task: director-create-env
        file: bosh-community-ci-infra/bosh-concourse/tasks/deploy-bosh-director/director-create-env-gcp.yml
        image: cf-deployment-concourse-tasks-registry-image
        params:
          GCP_CREDENTIALS_JSON: ((gcp_credentials_json))
        ensure:
          do:
            - in_parallel:
              - put: director-creds
                params:
                  file: director-creds/creds.yml
              - put: director-state
                params:
                  file: director-state/state.json
      - task: update-credhub-credentials
        file: bosh-community-ci-infra/bosh-concourse/tasks/update-credhub-credentials/update-credhub-credentials.yml
        image: cf-deployment-concourse-tasks-registry-image
      - task: create-director-creds-source
        file: bosh-community-ci-infra/bosh-concourse/tasks/deploy-bosh-director/create-director-creds-source.yml
        image: cf-deployment-concourse-tasks-registry-image
        params:
          BOSH_CA_CERT: ((director_ca_cert.ca))
          BOSH_CLIENT: ((director_admin.username))
          BOSH_CLIENT_SECRET: ((director_admin.password))
          BOSH_ENVIRONMENT: ((director_target))
          CREDHUB_CLIENT: ((director_credhub_admin.username))
          CREDHUB_SECRET: ((director_credhub_admin.password))
          CREDHUB_SERVER: ((director_credhub_server))
          CREDHUB_CA_CERT: ((director_credhub_ca_cert.ca))
          JUMPBOX_PRIVATE_KEY: ((jumpbox_ssh.private_key))
          JUMPBOX_USERNAME: ((jumpbox_username))
          JUMPBOX_URL: ((jumpbox_url))
      - put: director-creds-source
        params:
          file: director-creds-source/creds-source.sh
      - task: create-concourse-creds-source
        file: bosh-community-ci-infra/bosh-concourse/tasks/deploy-concourse/create-concourse-creds-source.yml
        image: cf-deployment-concourse-tasks-registry-image
        params:
          CREDHUB_CLIENT: ((director_credhub_admin.username))
          CREDHUB_SECRET: ((director_credhub_admin.password))
          CREDHUB_SERVER: ((director_credhub_server))
          CREDHUB_CA_CERT: ((director_credhub_ca_cert.ca))
          JUMPBOX_PRIVATE_KEY: ((jumpbox_ssh.private_key))
          JUMPBOX_USERNAME: ((jumpbox_username))
          JUMPBOX_URL: ((jumpbox_url))
          WEB_IP: 10.0.0.4
      - put: concourse-creds-source
        params:
          file: concourse-creds-source/creds-source.sh
      - task: update-director-configs
        file: bosh-community-ci-infra/bosh-concourse/tasks/deploy-bosh-director/update-director-configs.yml
        image: cf-deployment-concourse-tasks-registry-image
        params:
          BOSH_CA_CERT: ((director_ca_cert.ca))
          BOSH_CLIENT: ((director_admin.username))
          BOSH_CLIENT_SECRET: ((director_admin.password))
          BOSH_ENVIRONMENT: ((director_target))
          CLOUD_CONFIG_PATH: bosh-community-ci-infra/bosh-concourse/tasks/deploy-bosh-director/cloud-config.yml
          JUMPBOX_PRIVATE_KEY: ((jumpbox_ssh.private_key))
          JUMPBOX_URL: ((jumpbox_url))
      - task: cleanup-bosh-director
        image: cf-deployment-concourse-tasks-registry-image
        params:
          BOSH_CA_CERT: ((director_ca_cert.ca))
          BOSH_CLIENT: ((director_admin.username))
          BOSH_CLIENT_SECRET: ((director_admin.password))
          BOSH_ENVIRONMENT: ((director_target))
        config:
          platform: linux
          run:
            path: bosh
            args:
            - clean-up
            - --all
            - -n

  - name: bosh-deploy-upgrader-concourse
    serial_groups: [ concourse-deploy ]
    plan:
      - in_parallel:
        - put: time-trigger
        - get: bosh-community-ci-infra
        - get: bpm-bosh-release
        - get: cf-deployment-concourse-tasks-registry-image
        - get: concourse-bosh-release
        - get: concourse-deployment
        - get: credhub-bosh-release
        - get: gcp-stemcell
        - get: monthly
          trigger: true
          passed:
            - create-director
        - get: uaa-bosh-release
      - in_parallel:
        - do:
          - task: pause-all-pipelines
            file: bosh-community-ci-infra/bosh-concourse/tasks/deploy-concourse/pause-all-pipelines.yml
            image: cf-deployment-concourse-tasks-registry-image
            params:
              CONCOURSE_URL: https://bosh.ci.cloudfoundry.org/
              TEAMS: main ubuntu-bionic-fips
              EXCLUDE_PIPELINE: deploy-concourse
          - put: paused-pipelines
            params:
              file: paused-pipelines/pipelines.tgz
          - task: wait-for-concourse-drain
            file: bosh-community-ci-infra/bosh-concourse/tasks/deploy-concourse/wait-for-concourse-drain.yml
            image: cf-deployment-concourse-tasks-registry-image
            params:
              CONCOURSE_URL: https://bosh.ci.cloudfoundry.org/
              IGNORE_JOB: bosh-deploy-upgrader-concourse
        - put: concourse-upgrader-bosh-deployment
          params:
            cleanup: true
            manifest: "concourse-deployment/cluster/concourse.yml"
            ops_files:
            - concourse-deployment/cluster/operations/uaa.yml
            - concourse-deployment/cluster/operations/credhub-colocated.yml
            - concourse-deployment/cluster/operations/enable-lets-encrypt.yml
            - concourse-deployment/cluster/operations/external-postgres.yml
            - concourse-deployment/cluster/operations/external-postgres-tls.yml
            - concourse-deployment/cluster/operations/secure-internal-postgres-credhub.yml
            - concourse-deployment/cluster/operations/scale.yml
            - concourse-deployment/cluster/operations/secure-internal-postgres-uaa.yml
            - concourse-deployment/cluster/operations/github-auth.yml
            - concourse-deployment/cluster/operations/tls-vars.yml
            - concourse-deployment/cluster/operations/tls-port.yml
            - concourse-deployment/cluster/operations/enable-global-resources.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/add-local-user.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/concourse-build-log-retention.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/container-placement-strategies.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/enable-cache-streamed-volumes.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/longer-login.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/modify-max-containers.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/postgres-updates.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/remove-release-metadata.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/static-web-ip.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/tls-port.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/uaa-uses-internal-ip.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/update-sections.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/web-lb-extension.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/update-variables-for-upgrader.yml
            releases:
            - bpm-bosh-release/release.tgz
            - concourse-bosh-release/release.tgz
            - credhub-bosh-release/release.tgz
            - uaa-bosh-release/release.tgz
            stemcells:
            - gcp-stemcell/stemcell.tgz
            vars:
              deployment_name: concourse-upgrader
              web_instances: 1
              web_ip: 10.0.0.50
              web_vm_type: concourse_web
              worker_instances: 1
              worker_vm_type: concourse_worker_2_8
            vars_files:
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/vars.yml
  - name: bosh-deploy-concourse
    serial_groups: [ concourse-deploy ]
    plan:
      - in_parallel:
        - get: bosh-community-ci-infra
          tags: [upgrader]
        - get: bpm-bosh-release
          tags: [upgrader]
          passed:
          - bosh-deploy-upgrader-concourse
        - get: cf-deployment-concourse-tasks-registry-image
          tags: [upgrader]
        - get: concourse-bosh-release
          tags: [upgrader]
          passed:
          - bosh-deploy-upgrader-concourse
        - get: concourse-deployment
          tags: [upgrader]
          passed:
          - bosh-deploy-upgrader-concourse
        - get: credhub-bosh-release
          tags: [upgrader]
          passed:
          - bosh-deploy-upgrader-concourse
        - get: gcp-stemcell
          tags: [upgrader]
          passed:
          - bosh-deploy-upgrader-concourse
        - get: time-trigger
          tags: [upgrader]
          trigger: true
          passed:
          - bosh-deploy-upgrader-concourse
        - get: uaa-bosh-release
          tags: [upgrader]
          passed:
          - bosh-deploy-upgrader-concourse
      - put: concourse-bosh-deployment
        tags: [upgrader]
        params:
          cleanup: true
          manifest: "concourse-deployment/cluster/concourse.yml"
          ops_files:
            - concourse-deployment/cluster/operations/uaa.yml
            - concourse-deployment/cluster/operations/credhub-colocated.yml
            - concourse-deployment/cluster/operations/enable-lets-encrypt.yml
            - concourse-deployment/cluster/operations/external-postgres.yml
            - concourse-deployment/cluster/operations/external-postgres-tls.yml
            - concourse-deployment/cluster/operations/secure-internal-postgres-credhub.yml
            - concourse-deployment/cluster/operations/scale.yml
            - concourse-deployment/cluster/operations/secure-internal-postgres-uaa.yml
            - concourse-deployment/cluster/operations/github-auth.yml
            - concourse-deployment/cluster/operations/tls-vars.yml
            - concourse-deployment/cluster/operations/tls-port.yml
            - concourse-deployment/cluster/operations/enable-global-resources.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/add-local-user.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/concourse-build-log-retention.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/container-placement-strategies.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/enable-cache-streamed-volumes.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/longer-login.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/modify-max-containers.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/postgres-updates.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/remove-release-metadata.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/static-web-ip.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/tls-port.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/uaa-uses-internal-ip.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/update-sections.yml
            - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/web-lb-extension.yml
          releases:
            - bpm-bosh-release/release.tgz
            - concourse-bosh-release/release.tgz
            - credhub-bosh-release/release.tgz
            - uaa-bosh-release/release.tgz
          stemcells:
            - gcp-stemcell/stemcell.tgz
          vars:
            deployment_name: concourse
            upgrader_web_ip: 10.0.0.50
            web_instances: 1
            web_ip: 10.0.0.4
            web_vm_type: concourse_web
            worker_instances: 2
            worker_vm_type: concourse_worker_4_16
          vars_files:
          - bosh-community-ci-infra/bosh-concourse/bosh-deploy-concourse/vars.yml
  - name: destroy-upgrader-deployment
    serial_groups: [ concourse-deploy ]
    plan:
      - get: time-trigger
        trigger: true
        passed:
        - bosh-deploy-concourse
      - put: concourse-upgrader-bosh-deployment
        params:
          delete:
            enabled: true
  - name: unpause-all-pipelines
    plan:
    - in_parallel:
      - get: time-trigger
        trigger: true
        passed:
        - destroy-upgrader-deployment
      - get: bosh-community-ci-infra
      - get: cf-deployment-concourse-tasks-registry-image
      - get: paused-pipelines
    - task: unpause-all-pipelines
      file: bosh-community-ci-infra/bosh-concourse/tasks/deploy-concourse/unpause-all-pipelines.yml
      image: cf-deployment-concourse-tasks-registry-image
      params:
        CONCOURSE_URL: https://bosh.ci.cloudfoundry.org/
